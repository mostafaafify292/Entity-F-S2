// <auto-generated />
using System;
using Entity_F_S1.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity_F_S2.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20240820044738_Mistake1")]
    partial class Mistake1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity_F_S1.Entities.Course", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TopicTopId")
                        .HasColumnType("int");

                    b.HasKey("EmpId");

                    b.HasIndex("TopicTopId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Course_Inst", b =>
                {
                    b.Property<int>("Inst_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Inst_Id"));

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<string>("Evaluate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Inst_Id");

                    b.ToTable("Courses_Inst");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeptId"), 10L, 10);

                    b.Property<DateOnly?>("HiringDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("instructor2InstId")
                        .HasColumnType("int");

                    b.HasKey("DeptId");

                    b.HasIndex("instructor2InstId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Instructor", b =>
                {
                    b.Property<int>("InstId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("cairo");

                    b.Property<int?>("Bouns")
                        .HasColumnType("int");

                    b.Property<int>("HourRate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<int?>("departmentDeptId")
                        .HasColumnType("int");

                    b.HasKey("InstId");

                    b.HasIndex("departmentDeptId");

                    b.ToTable("instructors");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Stud_Course", b =>
                {
                    b.Property<int>("Stud_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Stud_Id"));

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasKey("Stud_Id");

                    b.ToTable("stud_Courses");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Student", b =>
                {
                    b.Property<int>("StudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Cairo");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentDeptId")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudId");

                    b.HasIndex("DepartmentDeptId");

                    b.ToTable("students");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Topic", b =>
                {
                    b.Property<int>("TopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopId"), 100L, 100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopId");

                    b.ToTable("topics");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Course", b =>
                {
                    b.HasOne("Entity_F_S1.Entities.Topic", "Topic")
                        .WithMany("Courses")
                        .HasForeignKey("TopicTopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Department", b =>
                {
                    b.HasOne("Entity_F_S1.Entities.Instructor", "instructor2")
                        .WithMany()
                        .HasForeignKey("instructor2InstId");

                    b.Navigation("instructor2");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Instructor", b =>
                {
                    b.HasOne("Entity_F_S1.Entities.Department", "department")
                        .WithMany("instructors")
                        .HasForeignKey("departmentDeptId");

                    b.Navigation("department");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Student", b =>
                {
                    b.HasOne("Entity_F_S1.Entities.Department", "Department")
                        .WithMany("Studentss")
                        .HasForeignKey("DepartmentDeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Department", b =>
                {
                    b.Navigation("Studentss");

                    b.Navigation("instructors");
                });

            modelBuilder.Entity("Entity_F_S1.Entities.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
